<?xml version="1.0" encoding="UTF-8"?>

<grammar xmlns="http://relaxng.sourceforge.net/ns/shorthand" 
	xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0" 
	xmlns:sch="http://purl.oclc.org/dsdl/schematron" 
	xmlns:strip="http://strip.xml/strip" 
	datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes" 
	ns="http://rct3.sourceforge.net/rct3xml/raw">

	<sch:ns prefix="mod" uri="http://rct3.sourceforge.net/rct3xml/model"/>
	<sch:ns prefix="raw" uri="http://rct3.sourceforge.net/rct3xml/raw"/>
	<sch:ns prefix="sc" uri="http://rct3.sourceforge.net/rct3xml/scenery"/>
	<sch:ns prefix="math" uri="http://exslt.org/math"/>
	<sch:ns prefix="str" uri="http://exslt.org/strings"/>
	
	<include href="rct3xml-shared-v1.rng"/>
	<include href="rct3xml-installer-shared-v1.rng"/>

	<sch:pattern>
		<sch:title>Abstract referece checking rules.</sch:title>
		<sch:rule id="uniqueness" abstract="true">
			<sch:let name="ovlpath" value="concat(str:concat(ancestor::raw:rawovl/@basedir),ancestor::raw:rawovl[@file]/@file)" />
			<sch:assert test="count(ancestor::raw:rawovl[@file]//raw:*[(name() = name(current()/ancestor::*[1])) and (@name = current())]) = 1">The name '<sch:value-of select="."/>' of element <sch:value-of select="name(ancestor::*[1])"/> in ovl <sch:value-of select="concat(str:concat(ancestor::raw:rawovl/@basedir),ancestor::raw:rawovl[@file]/@file)"/> is not unique.</sch:assert>
		</sch:rule>
		<sch:rule id="refcheck-gsi" abstract="true">
			<sch:let name="ovlpath" value="concat(str:concat(ancestor::raw:rawovl/@basedir),ancestor::raw:rawovl[@file]/@file)" />
			<sch:assert test="//raw:gsi[@name = current()]" role="warning">No gsi element for <sch:value-of select="name()"/> attribute of <sch:value-of select="name(ancestor::*[1])"/> element found (<sch:value-of select="name(ancestor::*[@name])"/> '<sch:value-of select="ancestor-or-self::*[@name]/@name"/>' in ovl '<sch:value-of select="$ovlpath"/>').</sch:assert>
		</sch:rule>
		<sch:rule id="refcheck-sid" abstract="true">
			<sch:let name="ovlpath" value="concat(str:concat(ancestor::raw:rawovl/@basedir),ancestor::raw:rawovl[@file]/@file)" />
			<sch:assert test="//raw:sid[@name = current()]" role="warning">No sid element for <sch:value-of select="name()"/> attribute of <sch:value-of select="name(ancestor::*[1])"/> element found (<sch:value-of select="name(ancestor::*[@name])"/> '<sch:value-of select="ancestor-or-self::*[@name]/@name"/>' in ovl '<sch:value-of select="$ovlpath"/>').</sch:assert>
		</sch:rule>
		<sch:rule id="refcheck-spl" abstract="true">
			<sch:let name="ovlpath" value="concat(str:concat(ancestor::raw:rawovl/@basedir),ancestor::raw:rawovl[@file]/@file)" />
			<sch:let name="impref" value="ancestor::*[1]/@impref" />
			<sch:assert test="(//raw:spl[@name = current()]) or ($impref and (document(str:encode-uri(//raw:import[@id = $impref]/@file, false()), .)//sc:spline[@name = current()])) or ($impref and (document(str:encode-uri(//raw:import[@id = $impref]/@file, false()), .)//mod:spline[@name = current()]))" role="warning">No spl element for <sch:value-of select="name()"/> attribute of <sch:value-of select="name(ancestor::*[1])"/> element found (<sch:value-of select="name(ancestor::*[@name])"/> '<sch:value-of select="ancestor-or-self::*[@name]/@name"/>' in ovl '<sch:value-of select="$ovlpath"/>').</sch:assert>
		</sch:rule>
		<sch:rule id="refcheck-svd" abstract="true">
			<sch:let name="ovlpath" value="concat(str:concat(ancestor::raw:rawovl/@basedir),ancestor::raw:rawovl[@file]/@file)" />
			<sch:let name="impref" value="ancestor::*[1]/@impref" />
			<sch:assert test="(//raw:svd[@name = current()]) or (//raw:import[@name = current()]) or ($impref and (document(str:encode-uri(//raw:import[@id = $impref]/@file, false()), .)/sc:ovl[@name = current()]))" role="warning">No svd element for <sch:value-of select="name()"/> attribute of <sch:value-of select="name(ancestor::*[1])"/> element found (<sch:value-of select="name(ancestor::*[@name])"/> '<sch:value-of select="ancestor-or-self::*[@name]/@name"/>' in ovl '<sch:value-of select="$ovlpath"/>').</sch:assert>
		</sch:rule>
		<sch:rule id="refcheck-tex" abstract="true">
			<sch:let name="ovlpath" value="concat(str:concat(ancestor::raw:rawovl/@basedir),ancestor::raw:rawovl[@file]/@file)" />
			<sch:assert test="//raw:tex[@name = current()]" role="warning">No tex element for <sch:value-of select="name()"/> attribute of <sch:value-of select="name(ancestor::*[1])"/> element found (<sch:value-of select="name(ancestor::*[@name])"/> '<sch:value-of select="ancestor-or-self::*[@name]/@name"/>' in ovl '<sch:value-of select="$ovlpath"/>').</sch:assert>
		</sch:rule>
		<sch:rule id="refcheck-tks" abstract="true">
			<sch:let name="ovlpath" value="concat(str:concat(ancestor::raw:rawovl/@basedir),ancestor::raw:rawovl[@file]/@file)" />
			<sch:assert test="//raw:tks[@name = current()]" role="warning">No tks element for <sch:value-of select="name()"/> attribute of <sch:value-of select="name(ancestor::*[1])"/> element found (<sch:value-of select="name(ancestor::*[@name])"/> '<sch:value-of select="ancestor-or-self::*[@name]/@name"/>' in ovl '<sch:value-of select="$ovlpath"/>').</sch:assert>
		</sch:rule>
		<sch:rule id="refcheck-txt" abstract="true">
			<sch:let name="ovlpath" value="concat(str:concat(ancestor::raw:rawovl/@basedir),ancestor::raw:rawovl[@file]/@file)" />
			<sch:assert test="//raw:txt[@name = current()]" role="warning">No txt element for <sch:value-of select="name()"/> attribute of <sch:value-of select="name(ancestor::*[1])"/> element found (<sch:value-of select="name(ancestor::*[@name])"/> '<sch:value-of select="ancestor-or-self::*[@name]/@name"/>' in ovl '<sch:value-of select="$ovlpath"/>').</sch:assert>
		</sch:rule>
	</sch:pattern>

	<sch:pattern>
		<sch:title>ID/IDREF checking.</sch:title>
		<sch:rule context="@impref">
			<sch:assert test="//raw:import[@id=current()]">A <sch:value-of select="name(ancestor::*[1])"/> element's impref attribute asks for unknown import id '<sch:value-of select="."/>'</sch:assert>
		</sch:rule>
		<sch:rule context="//raw:import/@id">
			<sch:assert test="count(//raw:import[@id=current()]) = 1">The import element id '<sch:value-of select="."/>' is not unique.</sch:assert>
		</sch:rule>
	</sch:pattern>

	<start>
		<choice>
			<ref name="rawovl"/>
			<ref name="section"/>
			<ref name="variables"/>
		</choice>
	</start>
	<define name="rawFailModeType">
		<choice>
			<a:documentation>The options are 0 (warn on compile, fail on install) and 1 (fail both on compile and install)</a:documentation>
			<value type="unsignedInt">0</value>
			<value type="unsignedInt">1</value>
		</choice>
	</define>
	<define name="rawFileBase">
		<choice>
			<a:documentation>The options are 0 (install/compile dir, default) and 1 (user dir, only makes files when intalling)</a:documentation>
			<value type="unsignedInt">0</value>
			<value type="unsignedInt">1</value>
		</choice>
	</define>
	<define name="flag">
		<choice>
			<value>0</value>
			<value>1</value>
		</choice>
	</define>
	<define name="flags">
		<choice>
			<data type="unsignedInt"/> <!-- decimal -->
			<data type="string">  <!-- hexadecimal -->
				<param name="pattern">(h|0x)[0-9A-Fa-f]{8}</param>
			</data>
			<data type="string">  <!-- hexadecimal -->
				<param name="pattern">b[0-1]{32}</param>
			</data>
		</choice>
	</define>
	<div>
		<a:documentation>Reference Types</a:documentation>
		<define name="BANReference">
			<a:documentation>Reference to a ced structure</a:documentation>
			<data type="string"/>
		</define>
		<define name="BSHReference">
			<a:documentation>Reference to a ced structure</a:documentation>
			<data type="string"/>
		</define>
		<define name="CEDReference">
			<a:documentation>Reference to a ced structure</a:documentation>
			<data type="string"/>
		</define>
		<define name="CIDReference">
			<a:documentation>Reference to a cid structure</a:documentation>
			<data type="string"/>
		</define>
		<define name="FTXReference">
			<a:documentation>Reference to a ftx structure</a:documentation>
			<data type="string"/>
		</define>
		<define name="GSIReference">
			<a:documentation>Reference to a gsi structure</a:documentation>
			<data type="string"/>
		</define>
		<define name="SHSReference">
			<a:documentation>Reference to a shs structure</a:documentation>
			<data type="string"/>
		</define>
		<define name="SIDReference">
			<a:documentation>Reference to a sid structure</a:documentation>
			<data type="string"/>
		</define>
		<define name="SNDReference">
			<a:documentation>Reference to a snd structure</a:documentation>
			<data type="string"/>
		</define>
		<define name="SVDReference">
			<a:documentation>Reference to a svd structure</a:documentation>
			<data type="string"/>
		</define>
		<define name="SPLReference">
			<a:documentation>Reference to a spl structure</a:documentation>
			<data type="string"/>
		</define>
		<define name="TEXReference">
			<a:documentation>Reference to a tex structure</a:documentation>
			<data type="string"/>
		</define>
		<define name="TKSReference">
			<a:documentation>Reference to a tks structure</a:documentation>
			<data type="string"/>
		</define>
		<define name="TXSReference">
			<a:documentation>Reference to a texture style</a:documentation>
			<choice>
				<choice>
					<a:documentation>FTX Styles</a:documentation>
					<value type="string">SIOpaque</value>
					<value type="string">SIOpaqueDS</value>
					<value type="string">SIAlpha</value>
					<value type="string">SIAlphaDS</value>
					<value type="string">SIAlphaMask</value>
					<value type="string">SIAlphaMaskDS</value>
					<value type="string">SIAlphaMaskLow</value>
					<value type="string">SIEmissiveMask</value>
					<value type="string">SIGlass</value>
					<value type="string">SIWater</value>
					<value type="string">SIOpaqueCaustics</value>
					<value type="string">SIOpaqueCausticsGlossSpecular100</value>
					<value type="string">SIOpaqueCausticsReflection</value>
					<value type="string">SIOpaqueCausticsSpecular50</value>
					<value type="string">SIOpaqueCausticsSpecular100</value>
					<value type="string">SIOpaqueChrome</value>
					<value type="string">SIOpaqueChromeModulate</value>
					<value type="string">SIOpaqueGlossReflection</value>
					<value type="string">SIOpaqueGlossSpecular50</value>
					<value type="string">SIOpaqueGlossSpecular100</value>
					<value type="string">SIOpaqueReflection</value>
					<value type="string">SIOpaqueSpecular50</value>
					<value type="string">SIOpaqueSpecular50Reflection</value>
					<value type="string">SIOpaqueSpecular100</value>
					<value type="string">SIOpaqueSpecular100Reflection</value>
					<value type="string">SIOpaqueText</value>
					<value type="string">SIOpaqueUnlit</value>
					<value type="string">SIAlphaChrome</value>
					<value type="string">SIAlphaReflection</value>
					<value type="string">SIAlphaSpecular50</value>
					<value type="string">SIAlphaSpecular50Reflection</value>
					<value type="string">SIAlphaSpecular100</value>
					<value type="string">SIAlphaSpecular100Reflection</value>
					<value type="string">SIAlphaText</value>
					<value type="string">SIAlphaUnlit</value>
					<value type="string">SIAlphaMaskCaustics</value>
					<value type="string">SIAlphaMaskChrome</value>
					<value type="string">SIAlphaMaskReflection</value>
					<value type="string">SIAlphaMaskSpecular50</value>
					<value type="string">SIAlphaMaskSpecular50Reflection</value>
					<value type="string">SIAlphaMaskSpecular100</value>
					<value type="string">SIAlphaMaskSpecular100Reflection</value>
					<value type="string">SIAlphaMaskUnlit</value>
					<value type="string">SIAlphaMaskLowCaustics</value>
					<value type="string">SIAlphaMaskLowSpecular50</value>
					<value type="string">SIAlphaMaskLowSpecular50Reflection</value>
					<value type="string">SIAlphaMaskLowSpecular100</value>
					<value type="string">SIAlphaMaskLowSpecular100Reflection</value>
					<value type="string">SIAlphaMaskUnlitLow</value>
					<value type="string">SIEmissiveMaskReflection</value>
					<value type="string">SIEmissiveMaskSpecular50</value>
					<value type="string">SIEmissiveMaskSpecular50Reflection</value>
					<value type="string">SIEmissiveMaskSpecular100</value>
					<value type="string">SIEmissiveMaskSpecular100Reflection</value>
					<value type="string">SIFillZ</value>
				</choice>
				<choice>
					<a:documentation>TXS Styles</a:documentation>
					<choice>
						<a:documentation>Common</a:documentation>
						<value type="string">GUIIcon</value>
						<value type="string">PathGround</value>
						<value type="string">TerrainBlending</value>
						<value type="string">TerrainCliff</value>
					</choice>
					<choice>
						<a:documentation>Rare</a:documentation>
						<value type="string">EnvMap</value>
						<value type="string">GUIRendererBitmap</value>
						<value type="string">GUIRendererColour</value>
						<value type="string">GUIRendererZMask</value>
						<value type="string">GUISkin</value>
						<value type="string">GUISkinTile</value>
						<value type="string">GUISolidColour</value>
						<value type="string">GUISolidColourOpaque</value>
						<value type="string">HorizonShadowUV</value>
						<value type="string">LaserTS</value>
						<value type="string">LaserCapTS</value>
						<value type="string">PoolPreviewGrid</value>
						<value type="string">PoolPreviewGrid2</value>
						<value type="string">Rope</value>
						<value type="string">ShapeStandard</value>
						<value type="string">SolidColourFont</value>
						<value type="string">SystemFont</value>
						<value type="string">TerrainCircleBack</value>
						<value type="string">TerrainCircleFront</value>
						<value type="string">TerrainCliffTransparent</value>
						<value type="string">TerrainContour</value>
						<value type="string">TerrainDebug</value>
						<value type="string">TerrainDetail</value>
						<value type="string">TerrainDetailAndLightmap</value>
						<value type="string">TerrainFakeUp</value>
						<value type="string">TerrainFog</value>
						<value type="string">TerrainGrid</value>
						<value type="string">TerrainGrid2StageDummy</value>
						<value type="string">TerrainHighlight</value>
						<value type="string">TerrainHole</value>
						<value type="string">TerrainPosition</value>
						<value type="string">TerrainPositionNoZ</value>
						<value type="string">TerrainTransparent</value>
						<value type="string">TerrainZRender</value>
						<value type="string">VisibleFootprint</value>
						<value type="string">Underground</value>
						<value type="string">WaypointHighlight</value>
						<value type="string">ZFillAlpha</value>
					</choice>
				</choice>
			</choice>
		</define>
		<define name="TXTReference">
			<a:documentation>Reference to a txt structure</a:documentation>
			<data type="string"/>
		</define>
	</div>
	<define name="impref">
		<attribute name="impref" occurs="?" type="string"/>
	</define>
	<define name="validate">
		<attribute name="validate" occurs="?">
			<choice>
				<value>0</value>
				<value>1</value>
			</choice>
		</attribute>
	</define>
	<define name="baseattrs">
		<a:documentation>A comment that is shown when processing the tag.</a:documentation>
		<attribute name="comment" occurs="?" type="string"/>
		<attribute name="useprefix" occurs="?" type="boolean"/>
		<attribute name="if" occurs="?" type="string"/>
		<attribute name="ifnot" occurs="?" type="string"/>
		<ref name="impref"/>
		<ref name="validate"/>
	</define>
	<define name="rootattrs">
		<attribute name="conditions" occurs="?" type="string"/>
		<attribute name="prefix" occurs="?" type="string"/>
		<attribute name="installdir" occurs="?" type="string"/>
		<attribute name="basedir" occurs="?" type="string"/>
		<attribute name="file" occurs="?" type="string"/>
	</define>
	<define name="orientationattrs">
		<attribute name="handedness" occurs="?">
			<choice>
				<value type="string">left</value>
				<value type="string">right</value>
			</choice>
		</attribute>
		<attribute name="up" occurs="?">
			<choice>
				<value type="string">x</value>
				<value type="string">y</value>
				<value type="string">z</value>
			</choice>
		</attribute>
	</define>
	<define name="roottags">
		<ref name="datarefblock" occurs="?"/>
		<choice>
			<ref name="variables"/>
			<ref name="set"/>
			<ref name="unset"/>
			<ref name="check" strip:strip="1"/>
		</choice>
	</define>
	<define name="ovltags">
		<choice>
			<ref name="section"/>
			<ref name="subovl"/>
			<ref name="copy" strip:strip="1"/>
			<ref name="patch" strip:strip="1"/>
			<ref name="write" strip:strip="1"/>
			<ref name="import"/>
			<ref name="anr"/>
			<ref name="ban"/>
			<ref name="btbl" strip:strip="1"/>
			<ref name="bsh"/>
			<ref name="ced" strip:strip="1"/>
			<ref name="chg"/>
			<ref name="cid" strip:strip="1"/>
			<ref name="ftx"/>
			<ref name="gsi"/>
			<ref name="ptd"/>
			<ref name="qtd"/>
			<ref name="sat"/>
			<ref name="shs"/>
			<ref name="sid"/>
			<ref name="snd"/>
			<ref name="spl"/>
			<ref name="sta"/>
			<ref name="svd"/>
			<ref name="tex"/>
			<ref name="tks" strip:strip="1"/>
			<ref name="trr"/>
			<ref name="txt"/>
			<ref name="wai" strip:strip="1"/>
			<ref name="reference"/>
			<ref name="symbol"/>
		</choice>
	</define>
	<define name="data">
		<element name="data">
			<choice>
				<group>
					<attribute name="type">
						<value type="string">file</value>
					</attribute>
					<attribute name="datatype" occurs="?" type="string"/>
					<data type="string"/>
				</group>
				<group>
					<attribute name="type">
						<value type="string">data</value>
					</attribute>
					<attribute name="datatype" type="string"/>
					<data type="string"/>
				</group>
				<group>
					<attribute name="type">
						<value type="string">binary</value>
					</attribute>
					<attribute name="datatype" type="string"/>
					<data type="base64Binary"/>
				</group>
				<group>
					<attribute name="type">
						<value type="string">reference</value>
					</attribute>
					<ref name="guid"/>
				</group>
			</choice>
		</element>
	</define>
	<define name="dataref">
		<element name="dataref">
			<ref name="baseattrs"/>
			<attribute name="guid" ref="guid"/>
			<choice>
				<group>
					<attribute name="type">
						<value type="string">file</value>
					</attribute>
					<attribute name="datatype" occurs="?" type="string"/>
					<data type="string"/>
				</group>
				<group>
					<attribute name="type">
						<value type="string">data</value>
					</attribute>
					<attribute name="datatype" type="string"/>
					<data type="string"/>
				</group>
				<group>
					<attribute name="type">
						<value type="string">binary</value>
					</attribute>
					<attribute name="datatype" type="string"/>
					<data type="base64Binary"/>
				</group>
			</choice>
		</element>
	</define>
	<define name="datarefblock">
		<element name="datarefblock">
			<ref name="baseattrs"/>
			<ref name="dataref" occurs="*"/>
		</element>
	</define>
	<define name="anyElement">
    	<element>
	      	<anyName/>
			<choice occurs="*">
		  		<attribute>
		    		<anyName/>
		  		</attribute>
		  		<ref name="anyElement"/>
			</choice>
	    </element>
	</define>
	<define name="metadata">
		<element name="metadata" occurs="*">
			<attribute name="role" type="string"/>
			<ref name="anyElement" occurs="+"/>
		</element>
	</define>
	<div>
		<a:documentation>Structure tags</a:documentation>
		<sch:pattern>
			<sch:title>rawovl checking.</sch:title>
			<sch:rule context="//raw:rawovl/@basedir">
				<sch:assert test="(current() = '') or ((substring(current(), 1, 1) != '\') and (substring(current(), 1, 1) != '/'))" role="none">The content '<sch:value-of select="."/>' of a <sch:value-of select="name()"/> attribute should not start with a path separator.</sch:assert>
				<sch:assert test="(current() = '') or (substring(current(), string-length(current())) = '\') or (substring(current(), string-length(current())) = '/')" role="none">The content '<sch:value-of select="."/>' of a <sch:value-of select="name()"/> attribute should end with a path separator.</sch:assert>
			</sch:rule>
		</sch:pattern>
		<define name="rawovl">
			<element name="rawovl">
				<ref name="rootattrs"/>
				<ref name="metadata"/>
				<ref name="roottags" occurs="*"/>
				<ref name="ovltags" occurs="+"/>
			</element>
		</define>
		<define name="subovl">
			<element name="rawovl">
				<ref name="rootattrs"/>
				<ref name="baseattrs"/>
				<choice>
					<attribute name="include" type="string"/>
					<group>
						<ref name="metadata"/>
						<ref name="roottags" occurs="*"/>
						<ref name="ovltags" occurs="*"/>
					</group>
				</choice>
			</element>
		</define>
		<define name="section">
			<element name="section">
				<ref name="baseattrs"/>
				<attribute name="prefix" occurs="?" type="string"/>
				<choice>
					<attribute name="include" type="string"/>
					<group>
						<ref name="metadata"/>
						<ref name="ovltags" occurs="*"/>
					</group>
				</choice>
			</element>
		</define>
	</div>
	<div>
		<a:documentation>Variable tags</a:documentation>
		<define name="variables">
			<element name="variables">
				<optional>
					<attribute name="include">
						<data type="string"/>
					</attribute>
				</optional>
				<zeroOrMore>
					<choice>
						<ref name="variables"/>
						<ref name="set"/>
						<ref name="unset"/>
					</choice>
				</zeroOrMore>
			</element>
		</define>
		<define name="set">
			<element name="set">
				<attribute name="set" type="string"/>
				<attribute name="to" occurs="?" type="string"/>
			</element>
		</define>
		<define name="unset">
			<element name="unset">
				<attribute name="unset" type="string"/>
			</element>
		</define>
		<define name="check" strip:strip="1">
			<a:documentation>Check needs filename with extension. Reference checking needs the .common.ovl name (with extension).</a:documentation>
			<element name="check">
				<ref name="baseattrs"/>
				<attribute name="file">
					<data type="string"/>
				</attribute>
				<choice>
					<attribute name="for">
						<value type="string">presence</value>
					</attribute>
					<group>
						<attribute name="for">
							<value type="string">reference</value>
						</attribute>
						<attribute name="parameter">
							<data type="string"/>
						</attribute>
					</group>
				</choice>
				<attribute name="set">
					<data type="string"/>
				</attribute>
				<optional>
					<attribute name="to">
						<data type="string"/>
					</attribute>
				</optional>
				<optional>
					<attribute name="filebase">
						<ref name="rawFileBase"/>
					</attribute>
				</optional>
			</element>
		</define>
	</div>
	<div>
		<a:documentation>Main content tags</a:documentation>
		<div>
			<define name="copy" strip:strip="1">
				<a:documentation>Copy needs filenames with extension.</a:documentation>
				<element name="copy">
					<attribute name="from">
						<data type="string"/>
					</attribute>
					<attribute name="to">
						<data type="string"/>
					</attribute>
					<optional>
						<attribute name="filebase">
							<ref name="rawFileBase"/>
						</attribute>
					</optional>
					<optional>
						<attribute name="failmode">
							<ref name="rawFailModeType"/>
						</attribute>
					</optional>
				</element>
			</define>
			<define name="patch" strip:strip="1">
				<a:documentation>Patch needs filenames with extension, .common.ovl for ovl files.</a:documentation>
				<element name="patch">
					<attribute name="file">
						<data type="string"/>
					</attribute>
					<attribute name="what">
						<value type="string">addreference</value>
					</attribute>
					<attribute name="parameter">
						<data type="string"/>
					</attribute>
					<optional>
						<attribute name="failmode">
							<ref name="rawFailModeType"/>
						</attribute>
					</optional>
				</element>
			</define>
			<define name="write" strip:strip="1">
				<a:documentation>Copy needs filenames with extension.</a:documentation>
				<element name="write">
					<choice>
						<group>
							<attribute name="type">
								<value type="string">file</value>
							</attribute>
							<data type="anyURI">
								<param name="minLength">1</param>
							</data>
						</group>
						<group>
							<attribute name="type">
								<value type="string">data</value>
							</attribute>
							<data type="base64Binary">
								<param name="minLength">1</param>
							</data>
						</group>
					</choice>
					<attribute name="to">
						<data type="string"/>
					</attribute>
					<optional>
						<attribute name="filebase">
							<ref name="rawFileBase"/>
						</attribute>
					</optional>
				</element>
			</define>
		</div>
		<define name="import">
			<sch:pattern>
				<sch:title>import checks</sch:title>
				<sch:rule context="//raw:import/@file">
					<sch:assert test="document(str:encode-uri(current(),false()),.)/sc:ovl or document(str:encode-uri(current(),false()),.)/mod:model">Failed to load '<sch:value-of select="."/>' for import tag.</sch:assert>
				</sch:rule>
			</sch:pattern>
			<element name="import">
				<ref name="baseattrs"/>
				<attribute name="file" type="string"/>
				<attribute name="name" occurs="?" type="string"/>
				<attribute name="use" occurs="?">
					<choice>
						<value>main</value>
						<value>animations</value>
						<value>splines</value>
					</choice>
				</attribute>
				<attribute name="id" occurs="?" type="string"/>
			</element>
		</define>
		<define name="attraction">
			<sch:pattern>
				<sch:title>attraction checks</sch:title>
				<sch:rule context="//raw:attraction/@icon">
					<sch:extends rule="refcheck-gsi"/>
				</sch:rule>
				<sch:rule context="//raw:attraction/@loopSpline">
					<sch:extends rule="refcheck-spl"/>
				</sch:rule>
				<sch:rule context="//raw:attraction/raw:attractionPath/@spline">
					<sch:extends rule="refcheck-spl"/>
				</sch:rule>
			</sch:pattern>
			<element name="attraction">
				<ref name="baseattrs"/>
				<attribute name="type" occurs="?" type="unsignedShort"/>
				<attribute name="version" occurs="?">
					<choice>
						<value type="unsignedByte">0</value>
						<value type="unsignedByte">2</value>
						<value type="unsignedByte">3</value>
					</choice>
				</attribute>
				<attribute name="icon" occurs="?" ref="GSIReference"/>
				<attribute name="loopSpline" occurs="?" ref="SPLReference"/>
				<interleave>
					<element name="attractionPath" occurs="*">
						<attribute name="spline" ref="SPLReference"/>
						<ref name="impref"/>
					</element>
					<element name="attractionMisc" occurs="?">
						<attribute name="baseUpkeep" occurs="?" type="unsignedInt"/>
						<attribute name="u2" occurs="?" type="unsignedInt"/>
						<attribute name="u3" occurs="?" type="unsignedInt"/>
						<attribute name="flags" occurs="?" ref="flags"/>
						<attribute name="maxHeight" occurs="?" type="int"/>
					</element>
					<element name="attractionStaticUnknowns" occurs="?">
						<attribute name="u4" occurs="?" type="unsignedInt"/>
						<attribute name="u5" occurs="?" type="unsignedInt"/>
					</element>
					<element name="attractionExtension" occurs="?">
						<attribute name="addonAssociation" occurs="?" type="unsignedInt"/>
						<attribute name="u12" occurs="?" type="unsignedInt"/>
						<attribute name="uiDeactivationFlags" occurs="?" ref="flags"/>
					</element>
				</interleave>
			</element>
		</define>
		<define name="ride">
			<element name="ride">
				<attribute name="seating" occurs="?">
					<data type="int">
						<param name="minInclusive">0</param>
						<param name="maxInclusive">34</param>
					</data>
				</attribute>
				<attribute name="attractivity" occurs="?" type="unsignedInt"/>
				<attribute name="entryFee" occurs="?" type="unsignedInt"/>
				<attribute name="minCircuits" occurs="?" type="unsignedInt"/>
				<attribute name="maxCircuits" occurs="?" type="int"/>
				<interleave>
					<element name="rideStaticUnknowns" occurs="?">
						<attribute name="u11" occurs="?" type="unsignedInt"/>
						<attribute name="u12" occurs="?" type="unsignedInt"/>
						<attribute name="u13" occurs="?" type="int"/>
						<attribute name="u14" occurs="?" type="int"/>
						<attribute name="u15" occurs="?" type="int"/>
						<attribute name="u16" occurs="?" type="unsignedInt"/>
						<attribute name="u17" occurs="?" type="unsignedInt"/>
					</element>
					<element name="rideOption" occurs="+">
						<attribute name="type">
							<choice>
								<value type="unsignedInt">0</value>
								<value type="unsignedInt">1</value>
								<value type="unsignedInt">2</value>
								<value type="unsignedInt">3</value>
								<value type="unsignedInt">4</value>
								<value type="unsignedInt">5</value>
								<value type="unsignedInt">6</value>
								<value type="unsignedInt">7</value>
								<value type="unsignedInt">8</value>
								<value type="unsignedInt">9</value>
								<value type="unsignedInt">10</value>
								<value type="unsignedInt">11</value>
								<value type="unsignedInt">12</value>
							</choice>
						</attribute>
						<attribute name="suboptionValue" occurs="?" type="unsignedShort"/>
						<attribute name="suboptionGroup" occurs="?" type="unsignedShort"/>
						<element name="parameter" minOccurs="0" maxOccurs="4" type="float"/>
 					</element>
 					<ref name="rideStationLimit"/>
				</interleave>
			</element>
		</define>
		<define name="rideStationLimit">
 			<element name="rideStationLimit" occurs="*">
 				<attribute name="xPos" type="int"/>
 				<attribute name="zPos" type="int"/>
 				<attribute name="height" occurs="?" type="int"/>
 				<attribute name="flags" occurs="?" ref="flags" />
 			</element>
		</define>
		<div>
			<a:documentation>anr tags</a:documentation>
			<define name="anr">
				<sch:pattern>
					<sch:title>ANR checks</sch:title>
					<sch:rule context="//raw:anr/@name">
						<sch:let name="ovlpath" value="concat(str:concat(ancestor::raw:rawovl/@basedir),ancestor::raw:rawovl[@file]/@file)" />
						<sch:assert test="count(ancestor::raw:rawovl[@file]/raw:anr[@name = current()]) = 1">ANR name '<sch:value-of select="."/>' in ovl <sch:value-of select="concat(str:concat(ancestor::raw:rawovl/@basedir),ancestor::raw:rawovl[@file]/@file)"/> is not unique.</sch:assert>
					</sch:rule>
					<sch:rule context="//raw:anr/@nametxt">
						<sch:extends rule="refcheck-txt"/>
					</sch:rule>
					<sch:rule context="//raw:anr/@description">
						<sch:extends rule="refcheck-txt"/>
					</sch:rule>
					<sch:rule context="//raw:anr/@sid">
						<sch:extends rule="refcheck-sid"/>
					</sch:rule>
				</sch:pattern>
				<element name="anr">
					<ref name="baseattrs"/>
					<attribute name="name" type="string"/>
					<attribute name="nametxt" ref="TXTReference"/>
					<attribute name="description" ref="TXTReference"/>
					<attribute name="sid" ref="SIDReference"/>
					<interleave>
						<ref name="attraction"/>
						<ref name="ride" occurs="?"/>
						<element name="unknowns" occurs="?">
							<attribute name="u22" occurs="?" type="unsignedInt"/>
							<attribute name="u23" occurs="?" type="unsignedInt"/>
							<attribute name="u24" occurs="?" type="unsignedInt"/>
							<attribute name="u25" occurs="?" type="unsignedInt"/>
							<attribute name="u8" occurs="?" type="unsignedInt"/>
							<attribute name="u9" occurs="?" type="unsignedInt"/>	
						</element>
						<element name="showItem" occurs="*">
							<attribute name="animationIndex" type="unsignedInt"/>
							<data type="string"/>
						</element>
					</interleave>
				</element>
			</define>
		</div>
		<div>
			<a:documentation>ban tags</a:documentation>
			<define name="ban">
				<element name="ban">
					<ref name="baseattrs"/>
					<ref name="orientationattrs"/>
					<attribute name="name">
						<data type="string"/>
					</attribute>
					<choice>
						<group>
							<attribute name="modelFile" type="string"/>
							<attribute name="modelAnimation" occurs="?" type="string"/>
						</group>
						<group>
							<optional>
								<attribute name="totaltime">
									<data type="float">
										<param name="minExclusive">0</param>
									</data>
								</attribute>
							</optional>
							<oneOrMore>
								<ref name="banbone"/>
							</oneOrMore>
						</group>
					</choice>
				</element>
			</define>
			<define name="banbone">
				<element name="banbone">
					<ref name="baseattrs"/>
					<attribute name="name">
						<data type="string"/>
					</attribute>
					<oneOrMore>
						<choice>
							<element name="translation">
								<ref name="ovlTXYZ"/>
							</element>
							<element name="rotation">
								<ref name="ovlTXYZ"/>
							</element>
						</choice>
					</oneOrMore>
				</element>
			</define>
		</div>
		<define name="btbl" strip:strip="1">
			<element name="btbl">
				<ref name="baseattrs"/>
			</element>
		</define>
		<div>
			<a:documentation>bsh tags</a:documentation>
			<define name="bsh">
				<element name="bsh">
					<ref name="baseattrs"/>
					<attribute name="name">
						<data type="string"/>
					</attribute>
					<optional>
						<element name="boundingboxmin">
							<ref name="ovlVector"/>
						</element>
						<element name="boundingboxmax">
							<ref name="ovlVector"/>
						</element>
					</optional>
					<interleave>
						<oneOrMore>
							<ref name="bshmesh"/>
						</oneOrMore>
						<oneOrMore>
							<ref name="bshbone"/>
						</oneOrMore>
					</interleave>
				</element>
			</define>
			<define name="bshmesh">
				<element name="bshmesh">
					<ref name="baseattrs"/>
					<attribute name="ftx">
						<ref name="FTXReference"/>
					</attribute>
					<attribute name="txs">
						<ref name="TXSReference"/>
					</attribute>
					<optional>
						<attribute name="transparency">
							<choice>
								<value type="unsignedInt">0</value>
								<value type="unsignedInt">1</value>
								<value type="unsignedInt">2</value>
							</choice>
						</attribute>
					</optional>
					<optional>
						<attribute name="flags">
							<data type="unsignedInt"/>
						</attribute>
					</optional>
					<optional>
						<attribute name="support">
							<ref name="ovlMeshSupport"/>
						</attribute>
					</optional>
					<optional>
						<attribute name="doublesided">
							<choice>
								<value type="unsignedInt">1</value>
								<value type="unsignedInt">3</value>
							</choice>
						</attribute>
					</optional>
					<choice>
						<group>
							<attribute name="meshname">
								<data type="string"/>
							</attribute>
							<attribute name="modelfile">
								<data type="string"/>
							</attribute>
							<optional>
								<attribute name="bone">
									<data type="byte"/>
								</attribute>
							</optional>
							<optional>
								<attribute name="fudge">
									<ref name="impFudge"/>
								</attribute>
							</optional>
							<choice>
								<group>
									<optional>
										<attribute name="handedness">
											<choice>
												<value type="string">left</value>
												<value type="string">right</value>
											</choice>
										</attribute>
									</optional>
									<optional>
										<attribute name="up">
											<choice>
												<value type="string">x</value>
												<value type="string">y</value>
												<value type="string">z</value>
											</choice>
										</attribute>
									</optional>
								</group>
								<optional>
									<element name="transformation">
										<ref name="impMatrix"/>
									</element>
								</optional>
							</choice>
						</group>
						<interleave>
							<oneOrMore>
								<element name="vertex2">
									<ref name="ovlVertex2"/>
								</element>
							</oneOrMore>
							<oneOrMore>
								<element name="triangle">
									<attribute name="a">
										<data type="unsignedShort"/>
									</attribute>
									<attribute name="b">
										<data type="unsignedShort"/>
									</attribute>
									<attribute name="c">
										<data type="unsignedShort"/>
									</attribute>
								</element>
							</oneOrMore>
						</interleave>
					</choice>
				</element>
			</define>
			<define name="bshbone">
				<element name="bshbone">
					<ref name="baseattrs"/>
					<choice>
						<attribute name="name">
							<value type="string">Scene Root</value>
						</attribute>
						<group>
							<attribute name="name">
								<data type="string"/>
							</attribute>
							<attribute name="parent">
								<data type="byte"/>
							</attribute>
							<element name="position1">
								<ref name="impMatrix"/>
							</element>
							<optional>
								<element name="position2">
									<ref name="impMatrix"/>
								</element>
							</optional>
						</group>
					</choice>
				</element>
			</define>
		</div>
		<div strip:strip="1">
			<a:documentation>ced tags</a:documentation>
			<define name="ced">
				<element name="ced">
					<ref name="baseattrs"/>
					<attribute name="name" type="string"/>
					<attribute name="nametxt" ref="TXTReference"/>
					<attribute name="icon" ref="GSIReference"/>
                    <element name="more" occurs="?">
                        <ref name="baseattrs"/>
                        <attribute name="thirst" occurs="?" type="float"/>
                        <attribute name="hunger" occurs="?" type="float"/>
                        <attribute name="u1" occurs="?" type="unsignedInt"/>
                        <attribute name="u4" occurs="?" type="unsignedInt"/>
                        <attribute name="u7" occurs="?" type="float"/>
                    </element>
				</element>
			</define>
		</div>
		<define name="chg">
			<element name="chg">
				<attribute name="name" type="string"/>
				<attribute name="nametxt" ref="TXTReference"/>
				<attribute name="description" ref="TXTReference"/>
				<attribute name="sid" ref="SIDReference"/>
				<attribute name="roomspline" ref="SPLReference"/>
				<ref name="baseattrs"/>
				<ref name="attraction" occurs="?"/>
			</element>
		</define>
		<div strip:strip="1">
			<a:documentation>cid tags</a:documentation>
			<define name="cid">
				<element name="cid">
					<ref name="baseattrs"/>
					<attribute name="name" type="string"/>
					<attribute name="nametxt" ref="TXTReference"/>
					<attribute name="pluralnametxt" ref="TXTReference"/>
					<interleave>
						<ref name="cidshape"/>
						<ref name="cidmore" occurs="?"/>
                        <ref name="cidsettings" occurs="?"/>
                        <ref name="cidtrash" occurs="?"/>
                        <ref name="cidsoaked" occurs="?"/>
                        <ref name="cidsizeunknowns" occurs="?"/>
                        <ref name="cidunknowns" occurs="?"/>
                        <ref name="cidextra" occurs="*"/>
					</interleave>
				</element>
			</define>
			<define name="cidshape">
				<element name="shape">
					<ref name="baseattrs"/>
					<choice>
						<group>
							<attribute name="shaped">
								<value type="boolean">0</value>
							</attribute>
							<attribute name="ftx" ref="FTXReference"/>
							<attribute name="scalex" occurs="?" type="float"/>
							<attribute name="scaley" occurs="?" type="float"/>
						</group>
						<group>
							<attribute name="shaped">
								<value type="boolean">1</value>
							</attribute>
							<attribute name="shape1" ref="SHSReference"/>
							<attribute name="shape2" ref="SHSReference"/>
						</group>
					</choice>
                    <attribute name="defaultcolour" occurs="?" ref="ovlDefaultColour"/>
                    <attribute name="distance" occurs="?" type="float"/>
				</element>
			</define>
			<define name="cidextra">
				<element name="extra">
					<ref name="baseattrs"/>
					<attribute name="name" ref="CEDReference"/>
				</element>
			</define>
			<define name="cidmore">
				<element name="more">
					<ref name="baseattrs"/>
                    <attribute name="icon" occurs="?" ref="GSIReference"/>
                    <attribute name="addonpack" occurs="?" ref="ovlExtraPack"/>
				</element>
			</define>
			<define name="cidsettings">
				<element name="settings">
					<ref name="baseattrs"/>
					<attribute name="lightprotectionfactor" occurs="?" type="float"/>
					<attribute name="thirst" occurs="?" type="float"/>
					<attribute name="hunger" occurs="?" type="float"/>
					<attribute name="type" occurs="?" type="unsignedInt"/>
					<attribute name="ageclass" occurs="?" type="int"/>
					<attribute name="flags" occurs="?" type="unsignedInt"/>
				</element>
			</define>
			<define name="cidsizeunknowns">
				<element name="priceUnknowns">
					<ref name="baseattrs"/>
					<attribute name="u1" occurs="?" type="unsignedInt"/>
					<attribute name="u2" occurs="?" type="unsignedInt"/>
					<attribute name="u3" occurs="?" type="unsignedInt"/>
					<attribute name="u4" occurs="?" type="unsignedInt"/>
				</element>
			</define>
			<define name="cidsoaked">
				<element name="soaked">
					<ref name="baseattrs"/>
					<attribute name="textureoption" occurs="?" type="string"/>
					<attribute name="unknown" occurs="?" type="unsignedInt"/>
					<attribute name="malebody" occurs="?" type="string"/>
					<attribute name="malelegs" occurs="?" type="string"/>
					<attribute name="femalebody" occurs="?" type="string"/>
					<attribute name="femalelegs" occurs="?" type="string"/>
				</element>
			</define>
			<define name="cidtrash">
				<element name="trash">
					<ref name="baseattrs"/>
                    <attribute name="wrapper" occurs="?" ref="CIDReference"/>
					<attribute name="trash1" occurs="?" type="float"/>
					<attribute name="trash2" occurs="?" type="int"/>
				</element>
			</define>
			<define name="cidunknowns">
				<element name="unknowns">
					<ref name="baseattrs"/>
					<attribute name="u1" occurs="?" type="unsignedInt"/>
					<attribute name="u3" occurs="?" type="unsignedInt"/>
					<attribute name="u26" occurs="?" type="unsignedInt"/>
					<attribute name="u27" occurs="?" type="unsignedInt"/>
					<attribute name="u28" occurs="?" type="unsignedInt"/>
					<attribute name="u33" occurs="?" type="unsignedInt"/>
				</element>
			</define>
		</div>
		<div>
			<a:documentation>ftx tags</a:documentation>
			<define name="ftx">
				<element name="ftx">
					<ref name="baseattrs"/>
					<attribute name="name">
						<data type="string"/>
					</attribute>
					<optional>
						<attribute name="dimension">
							<ref name="ovlTextureDimension"/>
						</attribute>
					</optional>
					<optional>
						<attribute name="recolourable">
							<ref name="ovlRecolourable"/>
						</attribute>
					</optional>
					<choice>
						<group>
							<interleave>
								<optional>
									<ref name="ftxanimation"/>
								</optional>
								<ref name="ftxframe"/>
							</interleave>
						</group>
						<group>
							<attribute name="fps">
								<data type="unsignedInt">
									<param name="minInclusive">1</param>
								</data>
							</attribute>
							<interleave>
								<oneOrMore>
									<ref name="ftxanimation"/>
								</oneOrMore>
								<oneOrMore>
									<ref name="ftxframe"/>
								</oneOrMore>
							</interleave>
						</group>
					</choice>
				</element>
			</define>
			<define name="ftxanimation">
				<element name="ftxanimation">
					<ref name="baseattrs"/>
					<attribute name="index">
						<data type="unsignedInt"/>
					</attribute>
					<optional>
						<attribute name="repeat">
							<data type="unsignedInt">
								<param name="minInclusive">1</param>
							</data>
						</attribute>
					</optional>
				</element>
			</define>
			<define name="ftxframe">
				<element name="ftxframe">
					<ref name="baseattrs"/>
					<optional>
						<attribute name="recolourable">
							<ref name="ovlRecolourable"/>
						</attribute>
					</optional>
					<optional>
						<attribute name="dimension">
							<ref name="ovlTextureDimension"/>
						</attribute>
					</optional>
					<optional>
						<attribute name="alphacutoff">
							<data type="unsignedByte"/>
						</attribute>
					</optional>
					<choice>
						<choice>
							<group>
								<element name="image">
									<ref name="baseattrs"/>
									<optional>
										<attribute name="usealpha">
											<value type="boolean">0</value>
										</attribute>
									</optional>
									<data type="string"/>
								</element>
								<optional>
									<element name="alpha">
										<ref name="baseattrs"/>
										<data type="string"/>
									</element>
								</optional>
							</group>
							<element name="image">
								<ref name="baseattrs"/>
								<optional>
									<attribute name="usealpha">
										<value type="boolean">1</value>
									</attribute>
								</optional>
								<data type="string"/>
							</element>
						</choice>
						<group>
							<element name="palettedata">
								<ref name="baseattrs"/>
								<data type="base64Binary"/>
							</element>
							<element name="texturedata">
								<ref name="baseattrs"/>
								<data type="base64Binary"/>
							</element>
							<optional>
								<element name="alphadata">
									<ref name="baseattrs"/>
									<data type="base64Binary"/>
								</element>
							</optional>
						</group>
					</choice>
				</element>
			</define>
		</div>
		<div>
			<define name="gsi">
				<sch:pattern>
					<sch:title>GSI checks</sch:title>
					<sch:rule context="//raw:gsi/@name">
						<sch:extends rule="uniqueness"/>
					</sch:rule>
					<sch:rule context="//raw:gsi/@tex">
						<sch:extends rule="refcheck-tex"/>
					</sch:rule>
				</sch:pattern>
				<element name="gsi">
					<ref name="baseattrs"/>
					<attribute name="name" type="string"/>
					<attribute name="tex" ref="TEXReference"/>
					<attribute name="unk" occurs="?" type="unsignedInt"/>
					<choice>
						<group>
							<attribute name="right" type="unsignedInt"/>
							<attribute name="left" type="unsignedInt"/>
							<attribute name="bottom" type="unsignedInt"/>
							<attribute name="top" type="unsignedInt"/>
						</group>
						<group>
							<attribute name="type">
								<value>0</value>
							</attribute>
							<ref name="gsipos"/>
							<ref name="gsipos"/>
							<ref name="gsipos"/>
							<ref name="gsipos"/>
						</group>
						<group>
							<attribute name="type">
								<value>1</value>
							</attribute>
						</group>
						<group>
							<attribute name="type">
								<choice>
									<value>2</value>
									<value>3</value>
								</choice>
							</attribute>
							<ref name="gsipos"/>
							<ref name="gsipos"/>
							<ref name="gsipos"/>
							<ref name="gsipos"/>
							<ref name="gsipos"/>
							<ref name="gsipos"/>
							<ref name="gsipos"/>
							<ref name="gsipos"/>
						</group>
						<group>
							<attribute name="type">
								<choice>
									<value>4</value>
									<value>5</value>
								</choice>
							</attribute>
							<ref name="gsipos"/>
							<ref name="gsipos"/>
							<ref name="gsipos"/>
							<ref name="gsipos"/>
							<ref name="gsipos"/>
							<ref name="gsipos"/>
						</group>
					</choice>
				</element>
			</define>
			<define name="gsipos">
				<element name="value">
					<ref name="baseattrs"/>
					<data type="unsignedInt"/>
				</element>					
			</define>
		</div>
		<define name="ptd">
			<element name="ptd">
				<ref name="baseattrs"/>
				<attribute name="name">
					<data type="string"/>
				</attribute>
				<optional>
					<attribute name="internalname">
						<data type="string"/>
					</attribute>
				</optional>
				<attribute name="nametxt">
					<ref name="TXTReference"/>
				</attribute>
				<attribute name="icon">
					<ref name="GSIReference"/>
				</attribute>
				<optional>
					<attribute name="underwater">
						<data type="boolean"/>
					</attribute>
				</optional>
				<interleave>
					<element name="texture_a">
						<data type="string"/>
					</element>
					<element name="texture_b">
						<data type="string"/>
					</element>
					<element name="flat">
						<data type="string"/>
					</element>
					<element name="straight_a">
						<data type="string"/>
					</element>
					<element name="straight_b">
						<data type="string"/>
					</element>
					<element name="turn_u">
						<data type="string"/>
					</element>
					<element name="turn_la">
						<data type="string"/>
					</element>
					<element name="turn_lb">
						<data type="string"/>
					</element>
					<element name="turn_ta">
						<data type="string"/>
					</element>
					<element name="turn_tb">
						<data type="string"/>
					</element>
					<element name="turn_tc">
						<data type="string"/>
					</element>
					<element name="turn_x">
						<data type="string"/>
					</element>
					<element name="corner_a">
						<data type="string"/>
					</element>
					<element name="corner_b">
						<data type="string"/>
					</element>
					<element name="corner_c">
						<data type="string"/>
					</element>
					<element name="corner_d">
						<data type="string"/>
					</element>
					<element name="slope">
						<data type="string"/>
					</element>
					<element name="slopestraight">
						<data type="string"/>
					</element>
					<element name="slopestraightleft">
						<data type="string"/>
					</element>
					<element name="slopestraightright">
						<data type="string"/>
					</element>
					<element name="slopemid">
						<data type="string"/>
					</element>
					<choice>
						<attribute name="extended">
							<value type="boolean">0</value>
						</attribute>
						<group>
							<attribute name="extended">
								<value type="boolean">1</value>
							</attribute>
							<optional>
								<element name="flat_fc">
									<data type="string"/>
								</element>
								<element name="slope_fc">
									<data type="string"/>
								</element>
								<element name="slope_bc">
									<data type="string"/>
								</element>
								<element name="slope_tc">
									<data type="string"/>
								</element>
								<element name="slopestraight_fc">
									<data type="string"/>
								</element>
								<element name="slopestraight_bc">
									<data type="string"/>
								</element>
								<element name="slopestraight_tc">
									<data type="string"/>
								</element>
								<element name="slopestraightleft_fc">
									<data type="string"/>
								</element>
								<element name="slopestraightleft_bc">
									<data type="string"/>
								</element>
								<element name="slopestraightleft_tc">
									<data type="string"/>
								</element>
								<element name="slopestraightright_fc">
									<data type="string"/>
								</element>
								<element name="slopestraightright_bc">
									<data type="string"/>
								</element>
								<element name="slopestraightright_tc">
									<data type="string"/>
								</element>
								<element name="slopemid_fc">
									<data type="string"/>
								</element>
								<element name="slopemid_bc">
									<data type="string"/>
								</element>
								<element name="slopemid_tc">
									<data type="string"/>
								</element>
								<element name="paving">
									<data type="string"/>
								</element>
							</optional>
						</group>
					</choice>
				</interleave>
			</element>
		</define>
		<define name="qtd">
			<element name="qtd">
				<ref name="baseattrs"/>
				<attribute name="name">
					<data type="string"/>
				</attribute>
				<optional>
					<attribute name="internalname">
						<data type="string"/>
					</attribute>
				</optional>
				<attribute name="nametxt">
					<ref name="TXTReference"/>
				</attribute>
				<attribute name="icon">
					<ref name="GSIReference"/>
				</attribute>
				<attribute name="texture">
					<ref name="FTXReference"/>
				</attribute>
				<interleave>
					<element name="straight">
						<data type="string"/>
					</element>
					<element name="turn_l">
						<data type="string"/>
					</element>
					<element name="turn_r">
						<data type="string"/>
					</element>
					<element name="slopeup">
						<data type="string"/>
					</element>
					<element name="slopedown">
						<data type="string"/>
					</element>
					<element name="slopestraight">
						<data type="string"/>
					</element>
				</interleave>
			</element>
		</define>
		<define name="sat">
			<element name="sat">
				<ref name="baseattrs"/>
				<attribute name="name" type="string"/>
				<attribute name="nametxt" ref="TXTReference"/>
				<attribute name="description" ref="TXTReference"/>
				<attribute name="sid" ref="SIDReference"/>
				<ref name="attraction" occurs="?"/>
			</element>
		</define>
		<div>
			<a:documentation>shs tags</a:documentation>
			<define name="shs">
				<element name="shs">
					<ref name="baseattrs"/>
					<attribute name="name" type="string"/>
					<optional>
						<element name="boundingboxmin" ref="ovlVector"/>
						<element name="boundingboxmax" ref="ovlVector"/>
					</optional>
					<interleave>
						<ref name="shsmesh" occurs="+"/>
						<ref name="shseffect" occurs="*"/>
					</interleave>
				</element>
			</define>
			<define name="shsmesh">
				<element name="mesh">
					<ref name="baseattrs"/>
					<attribute name="ftx" ref="FTXReference"/>
					<attribute name="txs" ref="TXSReference"/>
					<attribute name="transparency" occurs="?">
						<choice>
							<value type="unsignedInt">0</value>
							<value type="unsignedInt">1</value>
							<value type="unsignedInt">2</value>
						</choice>
					</attribute>
					<attribute name="flags" occurs="?" ref="flags"/>
					<attribute name="support" occurs="?" ref="ovlMeshSupport"/>
					<attribute name="doublesided" occurs="?">
						<choice>
							<value type="unsignedInt">1</value>
							<value type="unsignedInt">3</value>
						</choice>
					</attribute>
					<choice>
						<group>
							<attribute name="meshname" type="string"/>
							<attribute name="modelfile" type="string"/>
							<attribute name="fudge" occurs="?" ref="impFudge"/>
							<choice>
								<group>
									<attribute name="handedness" occurs="?">
										<choice>
											<value type="string">left</value>
											<value type="string">right</value>
										</choice>
									</attribute>
									<attribute name="up" occurs="?">
										<choice>
											<value type="string">x</value>
											<value type="string">y</value>
											<value type="string">z</value>
										</choice>
									</attribute>
								</group>
								<element name="transformation" occurs="?" ref="impMatrix"/>
							</choice>
						</group>
						<interleave>
							<element name="vertex" occurs="+" ref="ovlVertex"/>
							<element name="triangle" occurs="+">
								<attribute name="a">
									<data type="unsignedInt"/>
								</attribute>
								<attribute name="b">
									<data type="unsignedInt"/>
								</attribute>
								<attribute name="c">
									<data type="unsignedInt"/>
								</attribute>
							</element>
						</interleave>
					</choice>
				</element>
			</define>
			<define name="shseffect">
				<element name="effect">
					<ref name="baseattrs"/>
					<attribute name="name" type="string"/>
					<element name="position" ref="impMatrix"/>
				</element>
			</define>
		</div>
		<div>
			<a:documentation>sid tags</a:documentation>
			<define name="sid">
				<sch:pattern>
					<sch:title>SID checks</sch:title>
					<sch:rule context="//raw:sid/@name">
						<sch:extends rule="uniqueness"/>
					</sch:rule>
					<sch:rule context="//raw:sid/@nametxt">
						<sch:extends rule="refcheck-txt"/>
					</sch:rule>
					<sch:rule context="//raw:sid/@icon">
						<sch:extends rule="refcheck-gsi"/>
					</sch:rule>
					<sch:rule context="//raw:sid/@ovlpath">
						<sch:let name="importnode" value="//raw:import[@name = current()/ancestor::raw:sid/@svd]"/>
						<sch:let name="ovlpath" value="concat(str:concat($importnode/ancestor::raw:rawovl/@basedir),$importnode/ancestor::raw:rawovl[@file]/@file)" />
						<sch:assert test="$importnode" role="none">Could not identify import element for ovlpath checking in sid '<sch:value-of select="ancestor::*[1]/@name"/>'.</sch:assert>
						<sch:assert test="$ovlpath = concat(/raw:rawovl/@basedir, .)" role="none">The ovlpath attribute '<sch:value-of select="."/>' of sid '<sch:value-of select="ancestor::*[1]/@name"/>' does not seem to be correct (Expected: '<sch:value-of select="$ovlpath"/>' without '<sch:value-of select="/raw:rawovl/@basedir"/>').</sch:assert>
					</sch:rule>
					<sch:rule context="//raw:sid/raw:sidgroup/@name">
						<sch:extends rule="refcheck-txt"/>
					</sch:rule>
					<sch:rule context="//raw:sid/raw:sidgroup/@icon">
						<sch:extends rule="refcheck-gsi"/>
					</sch:rule>
					<sch:rule context="//raw:sid/@svd">
						<sch:extends rule="refcheck-svd"/>
					</sch:rule>
					<sch:rule context="//raw:sid/raw:sidvisual/@name">
						<sch:extends rule="refcheck-svd"/>
					</sch:rule>
				</sch:pattern>
				<element name="sid">
					<ref name="baseattrs"/>
					<attribute name="name" type="string"/>
					<attribute name="nametxt" ref="TXTReference"/>
					<attribute name="icon" occurs="?" ref="GSIReference"/>
					<attribute name="ovlpath" type="string"/>
					<attribute name="svd" ref="SVDReference"/>
					<interleave>
						<ref name="sidgroup" occurs="?"/>
						<ref name="sidtype" occurs="?"/>
						<ref name="sidposition" occurs="?"/>
						<ref name="sidcolours" occurs="?"/>
						<ref name="sidimporterunknowns" occurs="?"/>
						<ref name="sidstallunknowns" occurs="?"/>
						<ref name="sidextra" occurs="?"/>
                        <element name="unknowns" occurs="?">
                            <ref name="baseattrs"/>
                            <attribute name="u27" occurs="?" type="unsignedInt"/>
                            <attribute name="u28" occurs="?" type="unsignedInt"/>
                            <attribute name="u34" occurs="?" type="unsignedInt"/>
                            <attribute name="u35" occurs="?" type="unsignedInt"/>
                            <attribute name="u36" occurs="?" type="unsignedInt"/>
                            <attribute name="u37" occurs="?" type="unsignedInt"/>
                            <attribute name="u38" occurs="?" type="unsignedInt"/>
                            <attribute name="u39" occurs="?" type="unsignedInt"/>
                            <attribute name="u40" occurs="?" type="unsignedInt"/>
                            <attribute name="u41" occurs="?" type="unsignedInt"/>
                            <attribute name="u44" occurs="?" type="unsignedInt"/>
                        </element>
						<element name="flatRide" occurs="?">
						    <ref name="baseattrs"/>
							<attribute name="ageAlternatives" occurs="?" type="unsignedInt"/>
							<attribute name="runAnimations" occurs="?" type="unsignedInt"/>
							<attribute name="cyclesPerCircuit" occurs="?" type="unsignedInt"/>
							<attribute name="chunkCount" occurs="?" type="unsignedInt"/>
							<element name="animation" occurs="*">
								<ref name="baseattrs"/>
								<data type="string"/>
							</element>
						</element>
						<element name="sound" occurs="*">
							<ref name="baseattrs"/>
							<attribute name="extraU1" occurs="?" type="float"/>
							<attribute name="extraU2" occurs="?" type="float"/>
							<attribute name="extraU3" occurs="?" type="unsignedInt"/>
							<element name="soundRef" occurs="+">
								<ref name="baseattrs"/>
								<ref name="SNDReference"/>
							</element>
							<element name="animation" occurs="+">
								<ref name="baseattrs"/>
								<attribute name="fps" occurs="?" type="float"/>
								<choice>
									<empty/>
									<element name="command" occurs="+">
										<ref name="baseattrs"/>
										<choice>
											<attribute name="time" type="float"/>
											<attribute name="frame" type="float"/>
										</choice>
										<choice>
											<attribute name="type">
												<choice>
													<value>0</value>
													<value>1</value>
													<value>2</value>
												</choice>
											</attribute>
											<group>
												<attribute name="type">
													<choice>
														<value>3</value>
														<value>4</value>
													</choice>
												</attribute>
												<attribute name="value" type="float"/>
												<attribute name="end" type="float"/>
											</group>
										</choice>
									</element>
								</choice>
							</element>
						</element>
						<ref name="sidvisual" occurs="*"/>
						<ref name="sidparameter" occurs="*"/>
						<ref name="sidsquareunknowns" occurs="*"/>
					</interleave>
				</element>
			</define>
			<define name="sidtype">
				<element name="type">
					<ref name="baseattrs"/>
					<attribute name="removalcost" occurs="?" type="int"/>
					<attribute name="cost" occurs="?" type="int"/>
					<attribute name="scenerytype" occurs="?">
						<data type="int">
							<param name="minInclusive">0</param>
							<param name="maxInclusive">46</param>
						</data>
					</attribute>
				</element>
			</define>
			<define name="sidcolours">
				<element name="colours">
					<ref name="baseattrs"/>
					<attribute name="choice1" occurs="?" ref="ovlDefaultColour"/>
					<attribute name="choice2" occurs="?" ref="ovlDefaultColour"/>
					<attribute name="choice3" occurs="?" ref="ovlDefaultColour"/>
				</element>
			</define>
			<define name="sidgroup">
				<element name="group">
					<ref name="baseattrs"/>
					<attribute name="name" ref="TXTReference"/>
					<attribute name="icon" ref="GSIReference"/>
				</element>
			</define>
			<define name="sidimporterunknowns">
				<element name="importerUnknowns">
					<ref name="baseattrs"/>
					<attribute name="flags" occurs="?" ref="flags"/>
                    <choice>
                        <group>
                                <attribute name="u1" occurs="?" type="unsignedInt"/>
                                <attribute name="u2" occurs="?" type="unsignedInt"/>
                        </group>
                        <group>
                                <attribute name="u4" occurs="?" type="unsignedInt"/>
                                <attribute name="u17" occurs="?" type="unsignedInt"/>
                        </group>
                    </choice>
				</element>
			</define>
			<define name="sidsquareunknowns">
				<element name="squareUnknowns">
					<ref name="baseattrs"/>
					<attribute name="flags" occurs="?" ref="flags"/>
					<attribute name="minHeight" occurs="?" type="int"/>
					<attribute name="maxHeight" occurs="?" type="int"/>
					<attribute name="supports" occurs="?" ref="flag"/>
				</element>
			</define>
			<define name="sidparameter">
				<element name="parameter">
					<ref name="baseattrs"/>
					<attribute name="name" ref="ovlSidParameters"/>
					<attribute name="param" occurs="?" type="string"/>
				</element>
			</define>
			<define name="sidposition">
				<element name="position">
					<ref name="baseattrs"/>
					<attribute name="type" occurs="?">
						<data type="int">
							<param name="minInclusive">0</param>
							<param name="maxInclusive">8</param>
						</data>
					</attribute>
					<attribute name="xsquares" occurs="?" type="int"/>
					<attribute name="zsquares" occurs="?" type="int"/>
					<attribute name="xpos" occurs="?" type="float"/>
					<attribute name="ypos" occurs="?" type="float"/>
					<attribute name="zpos" occurs="?" type="float"/>
					<attribute name="xsize" occurs="?" type="float"/>
					<attribute name="ysize" occurs="?" type="float"/>
					<attribute name="zsize" occurs="?" type="float"/>
					<attribute name="supports" occurs="?" ref="ovlSidSupports"/>
				</element>
			</define>
			<define name="sidstallunknowns">
				<element name="stallUnknowns">
					<ref name="baseattrs"/>
					<attribute name="u1" occurs="?" type="unsignedInt"/>
					<attribute name="u2" occurs="?" type="unsignedInt"/>
				</element>
			</define>
			<define name="sidextra">
				<element name="extra">
					<ref name="baseattrs"/>
					<attribute name="version">
						<choice>
							<value>0</value>
							<value>1</value>
							<value>2</value>
						</choice>
					</attribute>
					<attribute name="addonPack" occurs="?" type="unsignedInt"/>
					<attribute name="genericAddon" occurs="?" type="unsignedInt"/>
					<attribute name="soakedUnk" occurs="?" type="unsignedInt"/>
					<attribute name="billboardAspect" occurs="?" type="int"/>
					<attribute name="wildUnk" occurs="?" type="float"/>
				</element>
			</define>
			<define name="sidvisual">
				<element name="svd">
					<ref name="baseattrs"/>
					<ref name="SVDReference"/>
				</element>
			</define>
		</div>
		<define name="snd">
			<element name="snd">
				<ref name="baseattrs"/>
				<attribute name="name" type="string"/>
				<attribute name="loop" occurs="?" type="unsignedInt"/>
				<interleave>
					<element name="sound">
						<ref name="baseattrs"/>
						<ref name="data"/>
					</element>
					<element name="staticUnknowns" occurs="?">
						<attribute name="u6" occurs="?" type="unsignedInt"/>
						<attribute name="u7" occurs="?" type="float"/>
						<attribute name="u8" occurs="?" type="float"/>
						<attribute name="u9" occurs="?" type="float"/>
						<attribute name="u10" occurs="?" type="float"/>
						<attribute name="u11" occurs="?" type="float"/>
						<attribute name="u12" occurs="?" type="float"/>
						<attribute name="u13" occurs="?" type="float"/>
						<attribute name="u14" occurs="?" type="float"/>
						<attribute name="u15" occurs="?" type="float"/>
					</element>
				</interleave>
			</element>
		</define>
		<div>
			<define name="spl">
				<element name="spl">
					<ref name="baseattrs"/>
					<ref name="orientationattrs"/>
					<attribute name="name" type="string"/>
					<choice>
						<group>
							<attribute name="modelFile" type="string"/>
							<attribute name="modelSpline" occurs="?" type="string"/>
						</group>
						<group>
							<attribute name="max_y" occurs="?" type="float"/>
							<optional>
								<attribute name="totalLength" type="float"/>
								<attribute name="inv_totalLength" type="float"/>
							</optional>
							<attribute name="cyclic" occurs="?" type="boolean"/>
							<interleave>
								<ref name="splnode" occurs="+"/>
								<choice>
									<attribute name="autoLengthRes" occurs="?" type="unsignedInt"/>
									<ref name="spllength" occurs="*"/>
								</choice>
								<ref name="spldata" occurs="*"/>
							</interleave>
						</group>
					</choice>
				</element>
			</define>
			<define name="splnode">
				<element name="splnode">
					<ref name="baseattrs"/>
					<attribute name="x" type="float"/>
					<attribute name="y" type="float"/>
					<attribute name="z" type="float"/>
					<attribute name="cp1x" type="float"/>
					<attribute name="cp1y" type="float"/>
					<attribute name="cp1z" type="float"/>
					<attribute name="cp2x" type="float"/>
					<attribute name="cp2y" type="float"/>
					<attribute name="cp2z" type="float"/>
				</element>
			</define>
			<define name="spllength">
				<element name="spllength">
					<ref name="baseattrs"/>
					<attribute name="length" type="float"/>
				</element>
			</define>
			<define name="spldata">
				<element name="spldata">
					<ref name="baseattrs"/>
					<attribute name="data">
						<data type="hexBinary">
							<param name="length">14</param>
						</data>
					</attribute>
				</element>
			</define>
		</div>
		<div>
			<define name="sta">
				<element name="sta">
					<ref name="baseattrs"/>
					<attribute name="name" type="string"/>
					<attribute name="nametxt" ref="TXTReference"/>
					<attribute name="description" ref="TXTReference"/>
					<attribute name="sid" ref="SIDReference"/>
					<interleave>
						<ref name="attraction" occurs="?"/>
						<ref name="stastallunknowns" occurs="?"/>
						<ref name="staitem" occurs="*"/>
					</interleave>
				</element>
			</define>
			<define name="stastallunknowns">
				<element name="stastallunknowns">
					<ref name="baseattrs"/>
					<attribute name="u1" occurs="?" type="unsignedInt"/>
					<attribute name="u2" occurs="?" type="unsignedInt"/>
					<attribute name="u3" occurs="?" type="unsignedInt"/>
					<attribute name="u4" occurs="?" type="unsignedInt"/>
					<attribute name="u5" occurs="?" type="unsignedInt"/>
					<attribute name="u6" occurs="?" type="unsignedInt"/>
				</element>
			</define>
			<define name="staitem">
				<element name="staitem">
					<ref name="baseattrs"/>
					<attribute name="cid" ref="CIDReference"/>
					<attribute name="cost" type="unsignedInt"/>
				</element>
			</define>
		</div>
		<div>
			<a:documentation>svd tags</a:documentation>
			<define name="svd">
				<element name="svd">
					<ref name="baseattrs"/>
					<attribute name="name" type="string"/>
					<attribute name="flags" occurs="?" ref="flags"/>
					<attribute name="sway" occurs="?" type="float"/>
					<attribute name="brightness" occurs="?" type="float"/>
					<attribute name="scale" occurs="?" type="float"/>
					<interleave>
						<ref name="svdunknowns" occurs="?"/>
						<ref name="svdlod" occurs="+"/>
					</interleave>
				</element>
			</define>
			<define name="svdunknowns">
				<element name="unknowns">
					<ref name="baseattrs"/>
					<attribute name="u4" occurs="?" type="float"/>
					<attribute name="u6" occurs="?" type="unsignedInt"/>
					<attribute name="u7" occurs="?" type="unsignedInt"/>
					<attribute name="u8" occurs="?" type="unsignedInt"/>
					<attribute name="u9" occurs="?" type="unsignedInt"/>
					<attribute name="u10" occurs="?" type="unsignedInt"/>
					<attribute name="u11" occurs="?" type="unsignedInt"/>
				</element>
			</define>
			<define name="svdlod">
				<element name="lod">
					<ref name="baseattrs"/>
					<attribute name="name" type="string"/>
					<attribute name="distance" type="float"/>
					<interleave>
						<ref name="svdlodunknowns" occurs="?"/>
						<choice>
							<group>
								<attribute name="type">
									<value type="unsignedInt">0</value>
								</attribute>
								<attribute name="staticshape" ref="SHSReference"/>
							</group>
							<group>
								<attribute name="type">
									<value type="unsignedInt">3</value>
								</attribute>
								<attribute name="boneshape" ref="BSHReference"/>
								<element name="animation" occurs="*">
									<ref name="baseattrs"/>
									<ref name="BANReference"/>
								</element>
							</group>
							<group>
								<attribute name="type">
									<value type="unsignedInt">4</value>
								</attribute>
								<attribute name="ftx" ref="FTXReference"/>
								<attribute name="txs" ref="TXSReference"/>
							</group>
						</choice>
					</interleave>
				</element>
			</define>
			<define name="svdlodunknowns">
				<element name="unknowns">
					<ref name="baseattrs"/>
					<attribute name="u2" occurs="?" type="unsignedInt"/>
					<attribute name="u4" occurs="?" type="unsignedInt"/>
					<attribute name="u7" occurs="?" type="unsignedInt"/>
					<attribute name="u8" occurs="?" type="unsignedInt"/>
					<attribute name="u9" occurs="?" type="unsignedInt"/>
					<attribute name="u10" occurs="?" type="unsignedInt"/>
					<attribute name="u11" occurs="?" type="unsignedInt"/>
					<attribute name="u12" occurs="?" type="unsignedInt"/>
					<attribute name="u14" occurs="?" type="unsignedInt"/>
				</element>
			</define>
		</div>
		<define name="tex">
			<sch:pattern>
				<sch:title>TEX checks</sch:title>
				<sch:rule context="//raw:tex/@name">
					<sch:extends rule="uniqueness"/>
				</sch:rule>
			</sch:pattern>
			<element name="tex">
				<ref name="baseattrs"/>
				<attribute name="name" type="string"/>
				<attribute name="format" occurs="?">
					<choice>
						<value strip:strip="1">2</value>
						<value>18</value>
						<value>19</value>
						<value>20</value>
						<data type="unsignedInt" strip:strip="1"/>
					</choice>
				</attribute>
				<attribute name="txs" occurs="?" ref="TXSReference"/>
				<attribute name="mips" occurs="?" type="unsignedInt"/>
				<element name="texture" occurs="+">
					<ref name="baseattrs"/>
					<attribute name="dimension" occurs="?" ref="ovlTextureDimension"/>
					<attribute name="auto" occurs="?">
						<choice>
							<value>resize</value>
							<value>rescale</value>
							<value>none</value>
						</choice>
					</attribute>
					<attribute name="opacity" occurs="?">
						<data type="float">
							<param name="minInclusive">0</param>
							<param name="maxInclusive">1</param>
						</data>
					</attribute>
					<ref name="data"/>
				</element>
			</element>
		</define>
		<div strip:strip="1">
			<a:documentation>tks tags</a:documentation>
			<define name="tks">
				<sch:pattern>
					<sch:title>TKS checks</sch:title>
					<sch:rule context="//raw:tks/@name">
						<sch:extends rule="uniqueness"/>
					</sch:rule>
					<sch:rule context="//raw:tks/@sid">
						<sch:extends rule="refcheck-sid"/>
					</sch:rule>
					<sch:rule context="//raw:tks/raw:splines/raw:car/@left">
						<sch:extends rule="refcheck-spl"/>
					</sch:rule>
					<sch:rule context="//raw:tks/raw:splines/raw:car/@right">
						<sch:extends rule="refcheck-spl"/>
					</sch:rule>
					<sch:rule context="//raw:tks/raw:splines/raw:join/@left">
						<sch:extends rule="refcheck-spl"/>
					</sch:rule>
					<sch:rule context="//raw:tks/raw:splines/raw:join/@right">
						<sch:extends rule="refcheck-spl"/>
					</sch:rule>
					<sch:rule context="//raw:tks/raw:splines/raw:extra/@left">
						<sch:extends rule="refcheck-spl"/>
					</sch:rule>
					<sch:rule context="//raw:tks/raw:splines/raw:extra/@right">
						<sch:extends rule="refcheck-spl"/>
					</sch:rule>
					<sch:rule context="//raw:tks/raw:splines/raw:water/@left">
						<sch:extends rule="refcheck-spl"/>
					</sch:rule>
					<sch:rule context="//raw:tks/raw:splines/raw:water/@right">
						<sch:extends rule="refcheck-spl"/>
					</sch:rule>
					<sch:rule context="//raw:tks/raw:soaked/@loopSpline">
						<sch:extends rule="refcheck-spl"/>
					</sch:rule>
					<sch:rule context="//raw:tks/raw:soaked/raw:path/@spline">
						<sch:extends rule="refcheck-spl"/>
					</sch:rule>
					<sch:rule context="//raw:tks/raw:soaked/raw:speedSplines/raw:splines/@left">
						<sch:extends rule="refcheck-spl"/>
					</sch:rule>
					<sch:rule context="//raw:tks/raw:soaked/raw:speedSplines/raw:splines/@right">
						<sch:extends rule="refcheck-spl"/>
					</sch:rule>
				</sch:pattern>
				<element name="tks">
					<ref name="baseattrs"/>
					<attribute name="name" type="string"/>
					<attribute name="internalname" type="string"/>
					<attribute name="version" occurs="?">
						<choice>
							<value>0</value>
							<value>2</value>
							<value>3</value>
						</choice>
					</attribute>
					<attribute name="sid" ref="SIDReference"/>
					<interleave>
						<element name="speed" occurs="*">
							<attribute name="u1" type="float"/>
							<attribute name="u2" type="float"/>
							<attribute name="u3" type="float"/>
							<attribute name="u4" occurs="?" type="float"/>
							<attribute name="u5" occurs="?" type="float"/>
						</element>
						<element name="basic" occurs="?">
							<attribute name="special" occurs="?" type="unsignedInt"/>
							<attribute name="direction" occurs="?" type="unsignedInt"/>
							<element name="entry" occurs="?" ref="tksenex"/>
							<element name="exit" occurs="?" ref="tksenex"/>
						</element>
						<element name="splines">
							<element name="car" ref="tkssplinepair"/>
							<element name="join" ref="tkssplinepair"/>
							<element name="extra" occurs="?" ref="tkssplinepair"/>
							<element name="water" occurs="?" ref="tkssplinepair"/>
						</element>
						<element name="animations" occurs="?">
							<attribute name="stopped" occurs="?" type="int"/>
							<attribute name="starting" occurs="?" type="int"/>
							<attribute name="running" occurs="?" type="int"/>
							<attribute name="stopping" occurs="?" type="int"/>
							<attribute name="holdAfterTrainStop" occurs="?" type="int"/>
							<attribute name="holdLoop" occurs="?" type="int"/>
							<attribute name="holdBeforeRelease" occurs="?" type="int"/>
							<attribute name="holdLeaving" occurs="?" type="int"/>
							<attribute name="holdAfterTrainLeft" occurs="?" type="int"/>
							<attribute name="preStationLeave" occurs="?" type="int"/>
							<attribute name="rotatingTowerIdle" occurs="?" type="int"/>
						</element>
						<element name="unknowns" occurs="?">
							<attribute name="u15" occurs="?" type="unsignedInt"/>
							<attribute name="u16" occurs="?" type="unsignedInt"/>
							<attribute name="u17" occurs="?" type="unsignedInt"/>
							<attribute name="u22" occurs="?" type="unsignedInt"/>
							<attribute name="u23" occurs="?" type="unsignedInt"/>
							<attribute name="u24" occurs="?" type="unsignedInt"/>
							<attribute name="u45" occurs="?" type="unsignedInt"/>
							<attribute name="u47" occurs="?" type="unsignedInt"/>
							<attribute name="u53" occurs="?" type="unsignedInt"/>
							<attribute name="u68" occurs="?" type="unsignedInt"/>
							<attribute name="u69" occurs="?" type="unsignedInt"/>
							<attribute name="u77" occurs="?" type="float"/>
							<attribute name="u78" occurs="?" type="float"/>
							<attribute name="u79" occurs="?" type="float"/>
						</element>
						<element name="options" occurs="?">
							<attribute name="towerRideBase" occurs="?" ref="flag"/>
							<attribute name="tower" occurs="?" type="float"/>
							<attribute name="waterSplash01" occurs="?" type="float"/>
							<attribute name="waterSplash02" occurs="?" type="float"/>
							<attribute name="reverser" occurs="?" type="float"/>
							<attribute name="elevatorTop" occurs="?" type="float"/>
							<attribute name="rapids01" occurs="?" type="float"/>
							<attribute name="rapids02" occurs="?" type="float"/>
							<attribute name="rapids03" occurs="?" type="float"/>
							<attribute name="whirlpool01" occurs="?" type="float"/>
							<attribute name="whirlpool02" occurs="?" type="float"/>
							<attribute name="chairLiftStationEnd" occurs="?" type="string"/>
						</element>
						<element name="soaked" occurs="?">
							<attribute name="loopSpline" occurs="?" ref="SPLReference"/>
							<attribute name="tower" occurs="?" type="float"/>
							<attribute name="aquarium" occurs="?" type="float"/>
							<attribute name="autoGroup" occurs="?" type="string"/>
							<attribute name="giantFlume" occurs="?" type="int"/>
							<attribute name="entryWide" occurs="?" ref="flag"/>
							<attribute name="exitWide" occurs="?" ref="flag"/>
							<attribute name="speedSpline" occurs="?" type="float"/>
							<attribute name="slideEndToLifthill" occurs="?" type="float"/>
							<attribute name="flags" occurs="?" ref="flags"/>
							<interleave>
								<element name="path" occurs="*">
									<attribute name="spline" ref="SPLReference"/>
									<ref name="impref"/>
								</element>
								<ref name="rideStationLimit"/>
								<element name="speedSplines" occurs="*">
									<attribute name="speed" type="float"/>
									<element name="splines" ref="tkssplinepair"/>
								</element>
								<element name="groupIsAtEntry" occurs="*" type="string"/>
								<element name="groupIsAtExit" occurs="*" type="string"/>
								<element name="groupRequireAtEntry" occurs="*" type="string"/>
								<element name="groupRequireAtExit" occurs="*" type="string"/>
								<element name="groupRefuseAtEntry" occurs="*" type="string"/>
								<element name="groupRefuseAtExit" occurs="*" type="string"/>
							</interleave>
							<ref name="impref"/>
						</element>
						<element name="wild" occurs="?">
							<attribute name="splitterHalf" occurs="?" type="unsignedInt"/>
							<attribute name="splitterJoint" occurs="?" ref="TKSReference"/>
							<attribute name="rotatorType" occurs="?" type="unsignedInt"/>
							<attribute name="animalHouse" occurs="?" type="float"/>
							<attribute name="alternateTextLookup" occurs="?" type="string"/>
							<attribute name="towerCap01" occurs="?" type="float"/>
							<attribute name="towerCap02" occurs="?" type="float"/>
						</element>
					</interleave>
				</element>
			</define>
			<define name="tksenex">
				<attribute name="curve" occurs="?" type="unsignedInt"/>
				<attribute name="flags" occurs="?" ref="flags"/>
				<attribute name="unknown" occurs="?" type="unsignedInt"/>
				<attribute name="slope" occurs="?" type="unsignedInt"/>
				<attribute name="bank" occurs="?" type="unsignedInt"/>
				<attribute name="group" occurs="?" type="string"/>
			</define>
			<define name="tkssplinepair">
				<attribute name="left" type="string"/>
				<attribute name="right" type="string"/>
				<ref name="impref"/>
			</define>
		</div>
		<div>
			<a:documentation>trr tags</a:documentation>
			<define name="trr">
				<sch:pattern>
					<sch:title>TRR checks</sch:title>
					<sch:rule context="//raw:trr/@name">
						<sch:extends rule="uniqueness"/>
					</sch:rule>
					<sch:rule context="//raw:trr/@nametxt">
						<sch:extends rule="refcheck-txt"/>
					</sch:rule>
					<sch:rule context="//raw:trr/@description">
						<sch:extends rule="refcheck-txt"/>
					</sch:rule>
					<sch:rule context="//raw:trr/raw:attraction">
						<sch:let name="ovlpath" value="concat(str:concat(ancestor::raw:rawovl/@basedir),ancestor::raw:rawovl[@file]/@file)" />
						<sch:assert test="@icon">The attraction element of a trr element needs an icon attribute (<sch:value-of select="name(ancestor::*[@name])"/> '<sch:value-of select="ancestor-or-self::*[@name]/@name"/>' in ovl '<sch:value-of select="$ovlpath"/>').</sch:assert>
					</sch:rule>
					<sch:rule context="//raw:trr/raw:soaked">
						<sch:report test="/raw:sectionGroupDefinitionBatch" role="warning">sectionGroupDefinitionBatch not supported yet.</sch:report>
					</sch:rule>
					<sch:rule context="//raw:trr/raw:trackSection[@validate='1']">
						<sch:assert test="//raw:tks[@name = current()]" role="warning">Tracksection '<sch:value-of select="."/>' not found.</sch:assert>
					</sch:rule>
				</sch:pattern>
				<element name="trr">
					<ref name="baseattrs"/>
					<attribute name="name" type="string"/>
					<attribute name="nametxt" ref="TXTReference"/>
					<attribute name="description" ref="TXTReference"/>
					<interleave>
						<ref name="attraction"/>
						<ref name="ride" occurs="?"/>
						<element name="trackSection" occurs="+">
							<attribute name="cost" occurs="?" type="int"/>
							<attribute name="split" occurs="?" ref="flag"/>
							<ref name="validate"/>
							<data type="string"/>
						</element>
						<element name="trackSectionRemoveDuplicates" occurs="?">
							<empty/>
						</element>
						<element name="train" occurs="*" type="string"/>
						<element name="trackPath" occurs="+" type="string"/>
						<element name="specials" occurs="?">
							<attribute name="cableLift" occurs="?" type="string"/>
							<attribute name="cableLift_u1" occurs="?" type="float"/>
							<attribute name="cableLift_u2" occurs="?" type="float"/>
							<attribute name="liftCar" occurs="?" type="string"/>
							<attribute name="u28" occurs="?" type="float"/>
							<attribute name="u29" occurs="?" type="float"/>
						</element>
						<element name="options" occurs="?">
							<attribute name="onlyOnWater" occurs="?" ref="flag"/>
							<attribute name="blocksPossible" occurs="?" ref="flag"/>
							<attribute name="carRotation" occurs="?" type="unsignedInt"/>
							<attribute name="loopNotAllowed" occurs="?" ref="flag"/>
							<attribute name="deconstructEverywhere" occurs="?" ref="flag"/>
						</element>
						<element name="station" occurs="?">
							<attribute name="name" occurs="?" type="string"/>
							<attribute name="platformHeightOverTrack" occurs="?" type="unsignedInt"/>
							<attribute name="startPreset" occurs="?" type="unsignedInt"/>
							<attribute name="startPossibilities" occurs="?" ref="flags"/>
							<attribute name="stationRollSpeed" occurs="?" type="float"/>
							<attribute name="modusFlags" occurs="?" ref="flags"/>
						</element>
						<element name="launched" occurs="?" ref="trrpmms"/>
						<element name="chain" occurs="?">
							<ref name="trrpmms"/>
							<attribute name="lock" occurs="?" type="float"/>
						</element>
						<element name="constant" occurs="?">
							<ref name="trrpmms"/>
							<attribute name="upDownVariation" occurs="?" type="float"/>
						</element>
						<element name="cost" occurs="?">
							<attribute name="upkeepPerTrain" occurs="?" type="int"/>
							<attribute name="upkeepPerCar" occurs="?" type="int"/>
							<attribute name="upkeepPerStation" occurs="?" type="int"/>
							<attribute name="costPreview1" occurs="?" type="int"/>
							<attribute name="costPreview2" occurs="?" type="int"/>
							<attribute name="costPreview3" occurs="?" type="int"/>
							<attribute name="costPer4h" occurs="?" type="int"/>
						</element>
						<element name="splines" occurs="?">
							<attribute name="autoComplete" occurs="?" ref="flag"/>
							<attribute name="track" occurs="?" type="string"/>
							<attribute name="trackBig" occurs="?" type="string"/>
							<attribute name="car" occurs="?" type="string"/>
							<attribute name="carSwing" occurs="?" type="string"/>
							<attribute name="profileHight" occurs="?" type="float"/>
						</element>
						<element name="tower" occurs="?">
							<attribute name="topDuration" occurs="?" type="float"/>
							<attribute name="topDistance" occurs="?" type="float"/>
							<attribute name="top" occurs="?" type="string"/>
							<attribute name="mid" occurs="?" type="string"/>
							<attribute name="otherTop" occurs="?" type="string"/>
							<attribute name="otherMid" occurs="?" type="string"/>
							<attribute name="otherTopFlipped" occurs="?" type="string"/>
							<attribute name="otherMidFlipped" occurs="?" type="string"/>
						</element>
						<element name="unknowns" occurs="?">
							<attribute name="u31" occurs="?" type="float"/>
							<attribute name="u32" occurs="?" type="float"/>
							<attribute name="u33" occurs="?" type="float"/>
							<attribute name="u34" occurs="?" type="float"/>
							<attribute name="u38" occurs="?" type="unsignedInt"/>
							<attribute name="u43" occurs="?" type="float"/>
							<attribute name="u45" occurs="?" type="float"/>
							<attribute name="u48" occurs="?" type="float"/>
							<attribute name="u49" occurs="?" type="float"/>
							<attribute name="u50" occurs="?" type="float"/>
							<attribute name="u51" occurs="?" type="float"/>
							<attribute name="u57" occurs="?" type="unsignedInt"/>
							<attribute name="u58" occurs="?" type="unsignedInt"/>
							<attribute name="u59" occurs="?" type="unsignedInt"/>
							<attribute name="u60" occurs="?" type="unsignedInt"/>
							<attribute name="u61" occurs="?" type="unsignedInt"/>
							<attribute name="u69" occurs="?" type="unsignedInt"/>
							<attribute name="u95" occurs="?" type="float"/>
						</element>
						<element name="soaked" occurs="?">
							<attribute name="u80" occurs="?" type="unsignedInt"/>
							<attribute name="u81" occurs="?" type="unsignedInt"/>
							<attribute name="u82" occurs="?" type="float"/>
							<attribute name="u85" occurs="?" type="unsignedInt"/>
							<attribute name="u86" occurs="?" type="unsignedInt"/>
							<attribute name="u87" occurs="?" type="unsignedInt"/>
							<attribute name="u88" occurs="?" type="int"/>
							<attribute name="u89" occurs="?" type="float"/>
							<attribute name="u90" occurs="?" type="float"/>
							<attribute name="u93" occurs="?" type="float"/>
							<attribute name="u94" occurs="?" type="float"/>
							<attribute name="u95" occurs="?" type="unsignedInt"/>
							<attribute name="u96" occurs="?" type="int"/>
							<attribute name="u97" occurs="?" type="unsignedInt"/>
							<attribute name="shortStruct" occurs="?" type="unsignedInt"/>
							<attribute name="u99" occurs="?" type="float"/>
							<attribute name="u100" occurs="?" type="float"/>
							<attribute name="u101" occurs="?" type="float"/>
							<attribute name="u102" occurs="?" type="float"/>
							<attribute name="u103" occurs="?" type="float"/>
							<element name="sectionGroupDefinitionBatch" occurs="*">
								<element name="sectionGroupDefinition" occurs="+">
									<attribute name="flagsA" ref="flags"/>
									<attribute name="nameA" occurs="?" type="string"/>
									<attribute name="flagsB" ref="flags"/>
									<attribute name="nameB" occurs="?" type="string"/>
								</element>
							</element>
						</element>
						<element name="wild" occurs="?">
							<attribute name="splitter" occurs="?" type="string"/>
							<attribute name="boneControl" occurs="?" ref="flag"/>
							<attribute name="spinnerControl" occurs="?" ref="flag"/>
							<choice>
								<attribute name="u107" occurs="?" ref="flag"/>
								<attribute name="equivalentInversion" occurs="?" ref="flag"/>
							</choice>
							<attribute name="u108" occurs="?" ref="flag"/>
							<attribute name="splitVal" occurs="?" type="int"/>
							<attribute name="splitFlag" occurs="?" ref="flag"/>
							<attribute name="name" occurs="?" type="string"/>
						</element>
					</interleave>
				</element>
			</define>
			<define name="trrpmms">
				<attribute name="preset" occurs="?" type="float"/>
				<attribute name="min" occurs="?" type="float"/>
				<attribute name="max" occurs="?" type="float"/>
				<attribute name="step" occurs="?" type="float"/>
			</define>
		</div>
		<define name="txt">
			<sch:pattern>
				<sch:title>TXT checks</sch:title>
				<sch:rule context="//raw:txt/@name">
					<sch:extends rule="uniqueness"/>
				</sch:rule>
			</sch:pattern>
			<element name="txt">
				<ref name="baseattrs"/>
				<attribute name="name" type="string"/>
				<attribute name="type">
					<choice>
						<value type="string">raw</value>
						<value type="string">text</value>
					</choice>
				</attribute>
				<data type="string"/>
			</element>
		</define>
		<div strip:strip="1">
			<a:documentation>wai tags</a:documentation>
			<define name="wai">
				<element name="wai">
					<ref name="baseattrs"/>
					<attribute name="name" type="string"/>
					<attribute name="shortname" type="string"/>
					<attribute name="nametxt" ref="TXTReference"/>
					<attribute name="description" ref="TXTReference"/>
					<attribute name="icon" ref="GSIReference"/>
					<attribute name="staticshape" ref="SHSReference"/>
					<interleave>
						<ref name="waiparameters" occurs="?"/>
						<ref name="waiunknowns" occurs="?"/>
					</interleave>
				</element>
			</define>
			<define name="waiparameters">
				<element name="parameters">
					<ref name="baseattrs"/>
					<attribute name="distance" occurs="?" type="float"/>
					<attribute name="cost" occurs="?" type="int"/>
					<attribute name="refund" occurs="?" type="int"/>
					<attribute name="inversedurability" occurs="?" type="float"/>
                    <attribute name="xsize" occurs="?" type="float"/>
                    <attribute name="ysize" occurs="?" type="float"/>
                    <attribute name="zsize" occurs="?" type="float"/>
                    <attribute name="flags" occurs="?" type="unsignedInt"/>
                    <attribute name="weight" occurs="?" type="float"/>
				</element>
			</define>
			<define name="waiunknowns">
				<element name="unknowns">
					<ref name="baseattrs"/>
                    <attribute name="u1" occurs="?" type="unsignedInt"/>
                    <attribute name="u2" occurs="?" type="unsignedInt"/>
                    <attribute name="u3" occurs="?" type="unsignedInt"/>
                    <attribute name="u4" occurs="?" type="unsignedInt"/>
                    <attribute name="u11" occurs="?" type="unsignedInt"/>
                    <attribute name="u17" occurs="?" type="unsignedInt"/>
                    <attribute name="u18" occurs="?" type="unsignedInt"/>
                    <attribute name="u19" occurs="?" type="unsignedInt"/>
                    <attribute name="u20" occurs="?" type="unsignedInt"/>
				</element>
			</define>
		</div>
		<div>
			<define name="reference">
				<element name="reference">
					<ref name="baseattrs"/>
					<choice>
						<attribute name="path" type="string"/>
						<data type="string"/>
					</choice>
				</element>
			</define>
			<define name="symbol">
				<element name="symbol">
					<ref name="baseattrs"/>
					<attribute name="name" type="string"/>
					<attribute name="target">
						<choice>
							<value type="string">unique</value>
							<value type="string">common</value>
						</choice>
					</attribute>
					<choice>
						<group>
							<attribute name="type">
								<value type="string">int</value>
							</attribute>
							<attribute name="data" type="unsignedInt"/>
						</group>
						<group>
							<attribute name="type">
								<value type="string">float</value>
							</attribute>
							<attribute name="data" type="float"/>
						</group>
					</choice>
				</element>
			</define>
		</div>
	</div>
</grammar>