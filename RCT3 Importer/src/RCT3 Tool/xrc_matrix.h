//
// This file was automatically generated by wxrc, do not edit by hand.
//

#ifndef __xrc_matrix_h__
#define __xrc_matrix_h__
class dlgMatrix : public wxDialog {
protected:
 wxSpinButton* m_spinMatrix;
 wxButton* m_btMatrixCopy;
 wxButton* m_btMatrixInvert;
 wxButton* m_btMatrixDel;
 wxButton* m_btMatrixClearAll;
 wxTextCtrl* m_textMatrixName;
 wxTextCtrl* m_text11;
 wxTextCtrl* m_text12;
 wxTextCtrl* m_text13;
 wxTextCtrl* m_text14;
 wxTextCtrl* m_text21;
 wxTextCtrl* m_text22;
 wxTextCtrl* m_text23;
 wxTextCtrl* m_text24;
 wxTextCtrl* m_text31;
 wxTextCtrl* m_text32;
 wxTextCtrl* m_text33;
 wxTextCtrl* m_text34;
 wxTextCtrl* m_text41;
 wxTextCtrl* m_text42;
 wxTextCtrl* m_text43;
 wxTextCtrl* m_text44;
 wxChoice* m_choiceTranslationPoint;
 wxStaticText* m_staticText6;
 wxTextCtrl* m_textTranslationX;
 wxStaticText* m_staticText7;
 wxTextCtrl* m_textTranslationY;
 wxStaticText* m_staticText8;
 wxTextCtrl* m_textTranslationZ;
 wxButton* m_btTranslate;
 wxButton* m_btTranslateOrigin;
 wxTextCtrl* m_textRotation;
 wxStaticText* m_staticDegree;
 wxButton* m_btRotationX;
 wxButton* m_btRotationY;
 wxButton* m_btRotationZ;
 wxStaticText* m_staticText61;
 wxTextCtrl* m_textScaleX;
 wxStaticText* m_staticText71;
 wxTextCtrl* m_textScaleY;
 wxStaticText* m_staticText81;
 wxTextCtrl* m_textScaleZ;
 wxButton* m_btScale;
 wxButton* m_btMirrorX;
 wxButton* m_btMirrorY;
 wxButton* m_btMirrorZ;
 wxButton* m_btUnity;
 wxButton* m_btDefault;
 wxButton* m_btFixOrient;
 wxButton* m_btLoad;
 wxButton* m_btMatrixLoadAll;
 wxButton* m_btOk;
 wxButton* m_btCancel;

private:
 void InitWidgetsFromXRC(wxWindow *parent){
  wxXmlResource::Get()->LoadObject(this,parent,_T("dlgMatrix"), _T("wxDialog"));
  m_spinMatrix = XRCCTRL(*this,"m_spinMatrix",wxSpinButton);
  m_btMatrixCopy = XRCCTRL(*this,"m_btMatrixCopy",wxButton);
  m_btMatrixInvert = XRCCTRL(*this,"m_btMatrixInvert",wxButton);
  m_btMatrixDel = XRCCTRL(*this,"m_btMatrixDel",wxButton);
  m_btMatrixClearAll = XRCCTRL(*this,"m_btMatrixClearAll",wxButton);
  m_textMatrixName = XRCCTRL(*this,"m_textMatrixName",wxTextCtrl);
  m_text11 = XRCCTRL(*this,"m_text11",wxTextCtrl);
  m_text12 = XRCCTRL(*this,"m_text12",wxTextCtrl);
  m_text13 = XRCCTRL(*this,"m_text13",wxTextCtrl);
  m_text14 = XRCCTRL(*this,"m_text14",wxTextCtrl);
  m_text21 = XRCCTRL(*this,"m_text21",wxTextCtrl);
  m_text22 = XRCCTRL(*this,"m_text22",wxTextCtrl);
  m_text23 = XRCCTRL(*this,"m_text23",wxTextCtrl);
  m_text24 = XRCCTRL(*this,"m_text24",wxTextCtrl);
  m_text31 = XRCCTRL(*this,"m_text31",wxTextCtrl);
  m_text32 = XRCCTRL(*this,"m_text32",wxTextCtrl);
  m_text33 = XRCCTRL(*this,"m_text33",wxTextCtrl);
  m_text34 = XRCCTRL(*this,"m_text34",wxTextCtrl);
  m_text41 = XRCCTRL(*this,"m_text41",wxTextCtrl);
  m_text42 = XRCCTRL(*this,"m_text42",wxTextCtrl);
  m_text43 = XRCCTRL(*this,"m_text43",wxTextCtrl);
  m_text44 = XRCCTRL(*this,"m_text44",wxTextCtrl);
  m_choiceTranslationPoint = XRCCTRL(*this,"m_choiceTranslationPoint",wxChoice);
  m_staticText6 = XRCCTRL(*this,"m_staticText6",wxStaticText);
  m_textTranslationX = XRCCTRL(*this,"m_textTranslationX",wxTextCtrl);
  m_staticText7 = XRCCTRL(*this,"m_staticText7",wxStaticText);
  m_textTranslationY = XRCCTRL(*this,"m_textTranslationY",wxTextCtrl);
  m_staticText8 = XRCCTRL(*this,"m_staticText8",wxStaticText);
  m_textTranslationZ = XRCCTRL(*this,"m_textTranslationZ",wxTextCtrl);
  m_btTranslate = XRCCTRL(*this,"m_btTranslate",wxButton);
  m_btTranslateOrigin = XRCCTRL(*this,"m_btTranslateOrigin",wxButton);
  m_textRotation = XRCCTRL(*this,"m_textRotation",wxTextCtrl);
  m_staticDegree = XRCCTRL(*this,"m_staticDegree",wxStaticText);
  m_btRotationX = XRCCTRL(*this,"m_btRotationX",wxButton);
  m_btRotationY = XRCCTRL(*this,"m_btRotationY",wxButton);
  m_btRotationZ = XRCCTRL(*this,"m_btRotationZ",wxButton);
  m_staticText61 = XRCCTRL(*this,"m_staticText61",wxStaticText);
  m_textScaleX = XRCCTRL(*this,"m_textScaleX",wxTextCtrl);
  m_staticText71 = XRCCTRL(*this,"m_staticText71",wxStaticText);
  m_textScaleY = XRCCTRL(*this,"m_textScaleY",wxTextCtrl);
  m_staticText81 = XRCCTRL(*this,"m_staticText81",wxStaticText);
  m_textScaleZ = XRCCTRL(*this,"m_textScaleZ",wxTextCtrl);
  m_btScale = XRCCTRL(*this,"m_btScale",wxButton);
  m_btMirrorX = XRCCTRL(*this,"m_btMirrorX",wxButton);
  m_btMirrorY = XRCCTRL(*this,"m_btMirrorY",wxButton);
  m_btMirrorZ = XRCCTRL(*this,"m_btMirrorZ",wxButton);
  m_btUnity = XRCCTRL(*this,"m_btUnity",wxButton);
  m_btDefault = XRCCTRL(*this,"m_btDefault",wxButton);
  m_btFixOrient = XRCCTRL(*this,"m_btFixOrient",wxButton);
  m_btLoad = XRCCTRL(*this,"m_btLoad",wxButton);
  m_btMatrixLoadAll = XRCCTRL(*this,"m_btMatrixLoadAll",wxButton);
  m_btOk = XRCCTRL(*this,"m_btOk",wxButton);
  m_btCancel = XRCCTRL(*this,"m_btCancel",wxButton);
 }
public:
dlgMatrix(wxWindow *parent=NULL){
  InitWidgetsFromXRC((wxWindow *)parent);
 }
};

void 
InitXmlMatrix();
#endif
